
buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "com.gradle.publish:plugin-publish-plugin:0.9.7"
  }
}

plugins {
  id "groovy"
  id "idea"
  id "maven"
  id "com.github.hierynomus.license" version "0.11.0"
  id "org.ajoberstar.release-opinion" version "1.4.0-rc.1"
}

apply plugin: "com.gradle.plugin-publish"

group = 'com.xebialabs.gradle.plugins'
defaultTasks 'build'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories { jcenter() }

idea {
  module {
    downloadJavadoc = true
    downloadSources = true
  }
}

release {
  grgit = org.ajoberstar.grgit.Grgit.open(project.projectDir)
  defaultVersionStrategy = org.ajoberstar.gradle.git.release.opinion.Strategies.SNAPSHOT 
  tagStrategy {
    toTagString = { vs -> "${project.name}-$vs" }
    parseTag = { org.ajoberstar.grgit.Tag tag ->
      if (tag.name.startsWith(project.name)) {
        com.github.zafarkhaja.semver.Version.valueOf(tag.name[project.name.size() + 1..-1])
      } else {
        null
      }
    }
  }
}
configurations.compile.transitive = false

dependencies {
  compile gradleApi()
  compile "com.typesafe:config:1.2.1"

  testCompile gradleTestKit()
  testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
    exclude group: 'org.codehaus.groovy', module: 'groovy-all'
  }
  testCompile 'com.netflix.nebula:nebula-test:4.2.2'
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
  classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

test {
  afterSuite { descriptor, result ->
    def indicator = "\u001B[32m✓\u001b[0m"
    if (result.failedTestCount) {
      indicator = "\u001B[31m✘\u001b[0m"
    }
    if (descriptor.className) {
      logger.lifecycle("$indicator Test ${descriptor.name}; Executed: ${result.testCount}/\u001B[32m${result.successfulTestCount}\u001B[0m/\u001B[31m${result.failedTestCount}\u001B[0m")
    }
  }
}

// This disables the pedantic doclint feature of JDK8
if (JavaVersion.current().isJava8Compatible()) {
  tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
  }
}

pluginBundle {
  website = 'http://www.xebialabs.com/'
  vcsUrl = 'https://github.com/xebialabs/gradle-xl-dependency-plugin'
  description = 'XebiaLabs dependency plugin'
  tags = ['xebialabs', 'plugins', 'dependencies']

  plugins {
    dependencyPlugin {
      id = 'xebialabs.dependency'
      displayName = 'XebiaLabs dependency plugin'
    }
  }
}

tasks.release.dependsOn([build, publishPlugins])
